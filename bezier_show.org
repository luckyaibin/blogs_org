;; Happy hacking Robin - Emacs loves you!

profile

p1 (x1,y1)
p2 (x2,y2)
p3 (x3,y3)

#+BEGIN_SRC 


                          P2
                         *
                                       # on curve
                                       * off curve
                   __-x--_
                _--       -_
          P1  _-            -          A non-y-monotonic Bézier arc.
             #               \
                              -        Here we have
                               \              P2.y >= P1.y &&
                                \  P3         P2.y >= P3.y      (!)
                                 #

#+END_SRC

B(t) = (1-t)^2 * p1 + 2t(1-t) * p2 + t^2 * p3




B'(t) = -2(1-t) * p1 + 2*((1-t) - t)*p2 + 2t * p3

B'(t) = 2(t-1) * p1 + 2(1-2t)*p2 + 2t * p3

令B'(t) = 0,就是曲线的水平或竖直切线:

0 = 2t*p1 - 2*p1 - 4t*p2 + 2*p2 + 2t * p3
0 = t*(2*p1 - 4*p2 + 2*p3) - 2*p1 + 2*p2
    (2*p1 - 2*p2)
t = -------------
    2*(p1-2*p2+p3)
    p1 - p2
t = ----------
    p1-2*p2+p3

针对水平切线,需要使用p1,p2,p3的y坐标值代入(垂直使用x坐标代入),
求得t_y = (p1.y - p2.y)/(p1.y - 2*p2.y + p3.y);

然后根据B(t)求出x,y坐标:
x = (1-t_y)^2 * p1.x + 2t_y(1-t_y) * p2.x + t_y^2 * p3.x
y = (1-t_y)^2 * p1.y + 2t_y(1-t_y) * p2.y + t_y^2 * p3.y

*接下来需要求p1~x,和x~p3这两段的贝塞尔方程(的控制点) c *

 p1,p2,p3构成的方程是:
B(t)_p1~p2~p3 = (1-t)^2 * p1 + 2t(1-t) * p2 + t^2 * p3  (1)

对于切点x,x坐标(x,y)已知,且p1~x 弧满足B(t)的方程;
设控制点为c,
那么p1~x方程:
B(t)_p1~c~x = (1-t)^2 * p1 + 2t(1-t) * c + t^2 * x      (2)
其中x是已知的.


B(t)_p1~p2~p3 = (1-t)^2 * p1 + 2t(1-t) * p2 + t^2 * p3  (1)
B(t)_p1~c~x   = (1-t)^2 * p1 + 2t(1-t) * c  + t^2 * x   (2)
这两个方程,经过相同的P1点(这时t=0),都为p1.

且p1点拥有相同的导数:
B'(t)_p~p2~p3 = 2(t-1) * p1 + 2(1-2t)*p2 + 2t * p3;
B'(t)_p1~c~x  = 2(t-1) * p1 + 2(1-2t)*c +  2t * x
把0代入:
B'(0)_p~p2~p3 = -2*p1 + 2*p2
B'(0)_p~c~x   = -2*p1 + 2*c












